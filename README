BUILD

The bootloader is made in AVR assembly for the AVRA assembler.

Build command: avra -o bootloader.hex main.asm


I2C API
 
-------+-----+----------------+-----------------------------------------------
Offset | R/W | Name           | Description
-------+-----+----------------+-----------------------------------------------
0x80   |  W  | Transmit data  | Transmit batch of 8 firmware bytes and
       |     |                | 1 checksum byte to the SMC.
       |     |                | Checksum = 2-complement of sum of firmware
       |     |                | bytes.
       |     |                |
0x81   |  R  | Commit         | Commit and store the 8 bytes transmitted to
       |     |                | flash memory.
       |     |                | Return values:
       |     |                | 01: OK
       |     |                | 02: Not enough data
       |     |                | 03: Too much data
       |     |                | 04: Checksum error
       |     |                | 05: Address out of range
       |     |                |
0x82   |  W  | Close          | Clear remainder of flash with 0xFF and reset SMC
       |     |                |
0x83   |  W  | Abort          | Abort and reset SMC. Data already written to the
       |     |                | flash can't be restored.
       |     |                |
0x84   |  R  | Version        | Get API version, 1 byte
-------+-----+----------------+-------------------------------------------------
 
X16 CLIENT SOFTWARE FUNCTION
 
Stage 1 - Prepare
- Reserve an 8 kB RAM buffer, and clear it with value 0xff
- Read and parse HEX file into RAM buffer
- Cancel on HEX file errors:
  - Unsupported record type
  - Address out of range
  - Checksum error
 
Stage 2 - Transmit
- Transmit 8 bytes + 1 checksum byte
- Commit
- Retransmit if error response. Abort after 10 attempts.10
- Repeat until all data is transmitted
- Close